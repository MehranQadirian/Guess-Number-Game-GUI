<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>